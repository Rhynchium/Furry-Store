@{
    ViewData["Title"] = "Compare";
    Layout = "_BackstagePage";
}

<div class="container mt-5">

    <div class="p-4 bg-white rounded shadow ">
        <h2 class="mt-2">商品比較圖</h2>
        <div class="p-5  " style="position: relative; height:600px; width:100%">
            <canvas id="trendChart" style="width:100% ; height:100%"></canvas>
        </div>


        <div class="row">

            <div class="col-lg-6">
                <div class="m-1 border rounded p-4">

                    <div class="input-group">
                        <span class="input-group-text bg-white">請選擇對比商品</span>
                        <button class="btn btn-outline-secondary dropdown-toggle" type="button" data-bs-toggle="dropdown" aria-expanded="false">商品名稱</button>
                        <ul class="dropdown-menu">
                            <li><a class="dropdown-item choose-type" onclick="leftMeasurement='merchandise'" data-search-type="merchandiseName">商品名稱</a></li>
                            <li><a class="dropdown-item choose-type" onclick="leftMeasurement='spec'" data-search-type="specName">規格名稱</a></li>
                            <li><a class="dropdown-item choose-type" onclick="leftMeasurement='merchandise'" data-search-type="merchandiseId">商品ID</a></li>
                            <li><a class="dropdown-item choose-type" onclick="leftMeasurement='spec'" data-search-type="specId">規格ID</a></li>
                        </ul>
                        <input type="text" class="form-control" data-search-type="merchandiseName" id="inputName1">
                        <button class="btn btn-dark px-4" type="button" id="btnLeft">確認</button>
                    </div>

                    <div class="p-5  " style="position: relative; height:600px; width:100%">
                        <canvas id="none"></canvas>
                    </div>

                </div>
            </div>


            <div class="col-lg-6">
                <div class="m-1 border rounded p-4">

                    <div class="input-group">
                        <span class="input-group-text bg-white">請選擇對比商品</span>
                        <button class="btn btn-outline-secondary dropdown-toggle" type="button" data-bs-toggle="dropdown" aria-expanded="false">商品名稱</button>
                        <ul class="dropdown-menu">
                            <li><a class="dropdown-item choose-type" onclick="rightMeasurement='merchandise'" data-search-type="merchandiseName">商品名稱</a></li>
                            <li><a class="dropdown-item choose-type" onclick="rightMeasurement='spec'" data-search-type="specName">規格名稱</a></li>
                            <li><a class="dropdown-item choose-type" onclick="rightMeasurement='merchandise'" data-search-type="merchandiseId">商品ID</a></li>
                            <li><a class="dropdown-item choose-type" onclick="rightMeasurement='spec'" data-search-type="specId">規格ID</a></li>
                        </ul>
                        <input type="text" class="form-control" data-search-type="merchandiseName" id="inputName2">
                        <button class="btn btn-dark px-4" type="button" id="btnRight">確認</button>
                    </div>

                    <div class="p-5 " style="position: relative; height:600px; width:100%">
                        <canvas id="none"></canvas>
                    </div>

                </div>

            </div>

        </div>
    </div>

</div>



@section Scripts{
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script>
        const inputTimeInterval = document.getElementById('inputTimeInterval')

        let classification = 'quantity' // quantity profit
        let timeUnit = 'day' // month day
        let timeIntervals = 12

        let leftId = 0
        let leftMeasurement = "merchandise"
        let leftTrendData

        let rightId = 0
        let rightMeasurement = "merchandise"
        let rightTrendData




        //trendChart
        const ctxTrend = document.getElementById('trendChart').getContext('2d');
        const trendChart = new Chart(ctxTrend, {
            type: 'line',
            data: {
                labels: [],
                datasets: []
            },
            options: {
                responsive: true,
                maintainAspectRatio: false,
                scales: {
                    y: {
                        beginAtZero: true
                    }
                }
            }
        })


        $('#btnLeft').click(async e => {
            const keyword = e.currentTarget.closest('div').querySelector('input[type=text]').value.trim()
            if (!keyword) return
            const searchType = e.currentTarget.closest('div').querySelector('input[type=text]').dataset.searchType
            leftId = await getId(searchType, keyword)
            leftTrendData = await getTrendData(leftMeasurement, leftId)
            console.log(leftTrendData)
            displayTrendChart()
        })
        $('#btnRight').click(async e => {
            const keyword = e.currentTarget.closest('div').querySelector('input[type=text]').value.trim()
            if (!keyword) return
            const searchType = e.currentTarget.closest('div').querySelector('input[type=text]').dataset.searchType
            rightId = await getId(searchType, keyword)
            rightTrendData = await getTrendData(rightMeasurement, leftId)
            console.log(rightTrendData)
            displayTrendChart()
        })
        //displaytrendChart
        function displayTrendChart(){
            const leftData = (!!leftTrendData) ? JSON.parse(JSON.stringify(leftTrendData)) : null
            const rightData = (!!rightTrendData) ? JSON.parse(JSON.stringify(rightTrendData)) : null
            trendChart.data.labels = []
            trendChart.data.datasets = []
            if (!!leftData){
                trendChart.data.labels = leftData.labels
                trendChart.data.datasets.push({
                    label: leftData.dataTitle ,
                    data: leftData.datas,
                    fill: false,
                    borderColor: 'rgb(75, 192, 192)',
                    tension: 0.1
                })
            }
            if (!!rightData) {
                trendChart.data.labels = rightData.labels
                trendChart.data.datasets.push({
                    label: rightData.dataTitle,
                    data: rightData.datas,
                    fill: false,
                    borderColor: 'rgb(192, 75, 192)',
                    tension: 0.1
                })
            }
            trendChart.update()
        }


        //取得對應ID
        async function getId(queryCol, keyword) {
            const response = await fetch(`${ROOT}/api/apistatistic/GetSearchedId?` +
                `queryCol=${queryCol}&keyword=${keyword}`)
            if (response.ok) return await response.json()
            return -1
        }


        //取得趨勢data
        async function getTrendData(measurement, id) {
            const response = await fetch(`${ROOT}/api/apistatistic/merchandisetrend?` +
                `measurement=${measurement}&classification=${classification}&timeUnit=${timeUnit}&id=${id}`)
            const data = await response.json()
            console.log(data)
            return data
        }

        //選擇搜尋型別
        $('a.choose-type').click(e => {
            const searchType = e.currentTarget.dataset.searchType
            const searchTypeName = e.currentTarget.innerText
            $(e.currentTarget).closest('.input-group').find('button.dropdown-toggle').text(searchTypeName)
            $(e.currentTarget).closest('.input-group').find('input[type=text]').attr('data-search-type', searchType)
        })

        //auto complete
        $('#inputName1,#inputName2').keyup(async e => {
            const thisInput = e.currentTarget
            const inputText = thisInput.value.trim()
            if (inputText.length < 1) return
            const searchType = thisInput.dataset.searchType
            console.log(searchType)
            const response = await fetch(`${ROOT}/api/apistatistic/GetAutoCompleteNames?` +
                `queryCol=${searchType}&keyword=${inputText}`)
            const data = await response.json()
            $(thisInput).autocomplete({
                source: data,
                minLength: 1
            })
        })


    </script>
}

@section Styles{
    <style>
        input::-webkit-outer-spin-button,
        input::-webkit-inner-spin-button {
            -webkit-appearance: none;
            margin: 0;
        }
        /* Firefox */
        input[type=number] {
            -moz-appearance: textfield;
        }

    </style>
}


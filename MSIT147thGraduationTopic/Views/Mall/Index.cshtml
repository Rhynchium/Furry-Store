@model IEnumerable<MSIT147thGraduationTopic.EFModels.MallDisplay>

@{
    Layout = "_MallPage";
    ViewData["Title"] = "尋找商品";
}

<!-- 搜尋列 / 分頁 / 排序(新舊.價格) -->
@*←**********響應式功能未做****************@
<nav class="bd-subnavbar py-2" aria-label="Secondary navigation">
    <div class="container-xxl d-flex align-items-md-center" style="background-color:pink">
        <!-- 關鍵字搜尋 -->
        <form class="bd-search position-relative me-auto mx-5" id="keywordsearch">
            <span class="algolia-autocomplete" style="position: relative; display: inline-block; direction: ltr;">
                <!-- 選擇搜尋條件 -->
                <label class="input-group-text" for="searchCondition">選擇搜尋條件</label>
                <select class="form-select conditionname" name="searchCondition">
                    <option value="1">商品名稱</option>
                    <option value="2">品牌名稱</option>
                    <option value="3">類別名稱</option>
                </select>@*←**********待解決會垂直排列的問題****************@
                <!-- 輸入關鍵字 -->
                <input type="search" class="form-control ds-input" name="txtKeyword" id="search-input" placeholder="搜尋關鍵字" aria-label="Search docs for..." autocomplete="off" data-bd-docs-version="5.1" spellcheck="false" role="combobox" aria-autocomplete="list" aria-expanded="false" aria-owns="algolia-autocomplete-listbox-0" dir="auto" style="position: relative; vertical-align: top;">
                <input type="submit" value="尋找商品" class="btn btn-secondary" />
                <span class="ds-dropdown-menu" role="listbox" id="algolia-autocomplete-listbox-0" style="position: absolute; top: 100%; z-index: 100; display: none; left: 0px; right: auto;">
                    <div class="ds-dataset-1"></div>
                </span>
            </span>
        </form>

        <div class="dropdown ms-md-auto d-flex mx-5">
            <!-- 每頁顯示筆數 -->
            <div class="d-flex select-limit js-select-limit mx-5" style="align-items: center;">
                每頁顯示 :
                <button type="button" class="btn btn-link pageSize" style="margin: -5px" value="20">20</button>
                <button type="button" class="btn btn-link pageSize" style="margin: -10px" value="50">50</button>
                <button type="button" class="btn btn-link pageSize" style="margin: -5px" value="70">70</button>
                筆
            </div>

            @using (Html.BeginForm())
            {
                <!-- 排序方式 -->
                <div class="dropdown ms-md-auto">
                    <select class="form-select" name="displayorder" id="displayorder" aria-label="Floating label select example">
                        <option value="0">最新商品</option>
                        <option value="1">由舊到新</option>
                        <option value="2">價格由低至高</option>
                        <option value="3">價格由高至低</option>
                    </select>
                </div>
            }
        </div>

</nav>


<div class="container">
    <div class="row">
        <!-- 側邊工具列 -->
        <div class="col-12 col-md-2 my-3">
            <nav class="navbar navbar-expand-lg navbar-light bg-light flex-column">
                <div class="container-fluid ">

                    <!-- 小視窗用摺疊按鈕 -->
                    <button class="navbar-toggler" href="#sublist" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNavDropdown" aria-controls="navbarNavDropdown" aria-expanded="true" aria-label="Toggle navigation">
                        <span class="navbar-toggler-icon"></span>
                    </button>
                    <!-- 小視窗時摺疊區域 -->
                    <div class="navbar-collapse collapse">
                        <ul class="navbar-nav flex-column" id="sublist">
                            <!-- 摺疊選單 for 商品類別 -->
                            <li class="nav-item">
                                <a class="nav-link collapsed" href="#sublist1" data-bs-toggle="collapse" aria-expanded="false">商品類別</a>
                                <ul id="categoryOptions" class="list-unstyled collapse mx-4">
                                    <li class="my-1 ">
                                        <a href="#">類別1</a>
                                    </li>
                                    <li class="my-1">
                                        <a href="#">類別2</a>
                                    </li>
                                    <li class="my-1">
                                        <a href="#">類別3</a>
                                    </li>
                                </ul>
                            </li>
                            <!-- 摺疊選單 for Tag -->
                            <li class="nav-item">
                                <a class="nav-link collapsed" href="#sublist2" data-bs-toggle="collapse" aria-expanded="false">Tag</a>
                                <ul id="sublist2" class="list-unstyled collapse mx-4">
                                    <li class="my-1">
                                        <a href="#">改成價格上下限+送出鈕</a>
                                    </li>
                                </ul>
                            </li>
                            <!-- 摺疊選單 for 價格區間 -->
                            <li class="nav-item">
                                <a class="nav-link collapsed" href="#sublist2" data-bs-toggle="collapse" aria-expanded="false">價格區間</a>
                                <ul id="sublist2" class="list-unstyled collapse mx-4">
                                    <li class="my-1">
                                        <a href="#">改成價格上下限+送出鈕</a>
                                    </li>
                                </ul>
                            </li>

                        </ul>

                    </div>
                </div>
            </nav>

        </div>


        <!-- 中間商品欄 -->
        <div class="col-12 col-md-10">
            <div class="row row-cols-1 row-cols-md-3 row-cols-lg-3 row-cols-xl-5 my-3" id="showThisPageMerchandise">
                <!-- 透過Ajax產生商品櫥窗 -->
            </div>

            <!-- 分頁 -->
            <nav aria-label="Page navigation example ">
                <ul class="pagination justify-content-center mt-4 " id="pagingContainer">
                    <!-- 透過Ajax產生分頁標籤 -->
                </ul>
            </nav>

        </div>

    </div>
</div>

@section Scripts{
    <script>
        let txtKeyword = "";
        let searchCondition = 1;
        let pageSize = 20;
        let displayorder = 0;
        let pageindex = 1;
        let sideCategoryId = 0;
        //呈現初始頁面
        SearchProducts();
        //呈現側邊商品類別選項
        $(async () => {
            const CategoryOptions = document.querySelector("#categoryOptions")
            const response = await fetch(`@Url.Content("~/ApiMerchandise/GenerateCategoryOptions")`);
            const returnJsonBag = await response.text();
            const searchResult = JSON.parse(returnJsonBag);


            $(".類別選項").on("click", (e) => {
                pageindex = $(e.currentTarget).attr("val-index");
                SearchProducts();
            })//顯示符合商品數?
        })

        //關鍵字搜尋
        $("#search-input").on("keyup", () => {
            txtKeyword = $("#search-input").val();
        })
        $(".conditionname").on("change", (e) => {
            searchCondition = $(".conditionname").val();
        })
        $("#keywordsearch").on("submit", (e) => {
            e.preventDefault();
            SearchProducts();
        })

        //每頁顯示筆數
        $(".pageSize").on("click", (e) => {
            pageSize = $(e.currentTarget).val();
            SearchProducts();
        })
        //選擇排序方式
        $("#displayorder").on("change", (e) => {
            displayorder = $("#displayorder").val();
            SearchProducts();
        })

        async function SearchProducts() {// ↓ C#語法，連接系統路徑                         // ↓ Js語法，串接參數(※別換行，會出莫名其妙的問題)
            const response = await fetch(`@Url.Content("~/ApiMall/DisplaySearchResult/")?txtKeyword=${txtKeyword}&searchCondition=${searchCondition}&displayorder=${displayorder}&pageSize=${pageSize}&PageIndex=${pageindex}`);
            const returnJsonBag = await response.text();
            const searchResult = JSON.parse(returnJsonBag);

            //產生商品櫥窗
            const pageContent = document.querySelector("#showThisPageMerchandise");
            var windows = searchResult.map(window => {
                const { price } = window;
                const showName = (window.fullName.length > 13) ? window.fullName.substring(0, 13) + "  ..." : window.fullName;
                const imageUrl = (window.imageUrl == null) ? "default.png" : window.imageUrl;
                return (
                    `<div class="col">\
                            <div class="card my-3 mx-2 text-center border-light ">\
                                <img src="@Url.Content("~/uploads/merchandisePicture/")${imageUrl}" class="w-100 img-thumbnail hover-overlay">\
                                <div class="card-body ">\
                                            <h6 class="card-title ">${showName}</h6>\
                                    <h5 class="card-text ">${price} 元</h5>\
                                    <a href="#" class="btn btn-outline-secondary">加入購物車</a>\
                                </div>\
                            </div>\
                        </div>`)// todo 連結至購物車
            })
            pageContent.innerHTML = windows.join("");

            //產生分頁標籤
            const responseforlength = await fetch(`@Url.Content("~/ApiMall/GetSearchResultLength/")?txtKeyword=${txtKeyword}&\
                                    searchCondition=${searchCondition}&displayorder=${displayorder}&pageSize=${pageSize}&PageIndex=${pageindex}`);
            const returnLengthBag = await responseforlength.text();
            const resultLength = JSON.parse(returnLengthBag);
            console.log(resultLength);
            const totalpage = Math.ceil(resultLength / pageSize);
            const pagingContainer = document.querySelector("#pagingContainer");

            var indexRow = `<li class="page-item border-light">\
                                        <a class="page-link toPrevious" href="#" aria-label="Previous">\
                                            <span aria-hidden="true">&laquo;</span>\
                                        </a>\
                                    </li>`;

            var indexArray = "";
            var start, end;
            if (totalpage <= 5) {
                start = 1; end = totalpage;
                for (var i = start; i <= end; i++) {
                    indexArray += `<li class="page-item"><a class="page-link showIndex" val-index="${i}" href="#">${i}</a></li>`;
                }
            }
            if (totalpage > 5) {
                if (pageindex < 4) {
                    start = 1; end = 5;
                    for (var i = start; i <= end; i++) {
                        indexArray += `<li class="page-item"><a class="page-link showIndex" val-index="${i}" href="#">${i}</a></li>`;
                    }
                    indexArray += `<li class="page-item"><a class="page-link" >...</a></li>`
                }
                if (pageindex == 4) {
                    start = 2; end = 6;
                    for (var i = start; i <= end; i++) {
                        indexArray += `<li class="page-item"><a class="page-link showIndex" val-index="${i}" href="#">${i}</a></li>`;
                    }
                    indexArray += `<li class="page-item"><a class="page-link" >...</a></li>`
                }
                if (pageindex > 4) {
                    if (pageindex + 3 <= totalpage) {
                        start = pageindex - 2; end = pageindex + 2
                        indexArray += `<li class="page-item"><a class="page-link showIndex" val-index="1" href="#">1</a></li>\
                                               <li class="page-item"><a class="page-link" >...</a></li>`
                        for (var i = start; i <= end; i++) {
                            indexArray += `<li class="page-item"><a class="page-link showIndex" val-index="${i}" href="#">${i}</a></li>`;
                        }
                        indexArray += `<li class="page-item"><a class="page-link" >...</a></li>`
                    }
                    if (pageindex + 3 > totalpage) {
                        start = pageindex - 2; end = totalpage
                        indexArray += `<li class="page-item"><a class="page-link showIndex" val-index="1" href="#">1</a></li>\
                                               <li class="page-item"><a class="page-link" >...</a></li>`
                        for (var i = start; i <= end; i++) {
                            indexArray += `<li class="page-item"><a class="page-link showIndex" val-index="${i}" href="#">${i}</a></li>`;
                        }
                    }
                }
            }

            indexRow += indexArray + `<li class="page-item">
                                                <a class="page-link toNext" href="#" aria-label="Next">
                                                    <span aria-hidden="true">&raquo;</span>
                                                </a>
                                              </li>`;

            pagingContainer.innerHTML = indexRow;

            //分頁點選+點選後改變格式
            $(".showIndex").on("click", (e) => {
                pageindex = $(e.currentTarget).attr("val-index");
                SearchProducts();
            })
            //前後頁按鈕
            $(".toPrevious").on("click", () => {
                if (pageindex > 1) pageindex--;
                SearchProducts();
            })
            $(".toNext").on("click", () => {
                if (pageindex < totalpage) pageindex++;
                SearchProducts();
            })
        }
    </script>
}

@section Styles{

}
@model IEnumerable<MSIT147thGraduationTopic.EFModels.Spec>

@{
    Layout = "_MallPage";
    ViewData["Title"] = "尋找商品";
}

<!-- 搜尋列 / 分頁 / 排序(新舊.價格) -->
@*****************************************響應式功能未做*****************************************@
<nav class="bd-subnavbar py-2" aria-label="Secondary navigation">
    <div class="container-xxl d-flex align-items-md-center" style="background-color:pink">
        <!-- 關鍵字搜尋 -->
        <form class="bd-search position-relative me-auto mx-5" id="keywordsearch">
            <span class="algolia-autocomplete" style="position: relative; display: inline-block; direction: ltr;">
                <!-- 選擇搜尋條件 -->
                <label class="input-group-text" for="searchCondition">選擇搜尋條件</label>
                <select class="form-select conditionname" name="searchCondition">
                    <option value="1">商品名稱</option>
                    <option value="2">品牌名稱</option>
                    <option value="3">類別名稱</option>
                </select>
                @*****************************************待解決會垂直排列的排版問題*****************************************@
                <!-- 輸入關鍵字 -->
                <input type="search" class="form-control ds-input" name="txtKeyword" id="search-input" placeholder="搜尋關鍵字" aria-label="Search docs for..." autocomplete="off" data-bd-docs-version="5.1" spellcheck="false" role="combobox" aria-autocomplete="list" aria-expanded="false" aria-owns="algolia-autocomplete-listbox-0" dir="auto" style="position: relative; vertical-align: top;">
                <input type="submit" value="尋找商品" class="btn btn-secondary" />
                <span class="ds-dropdown-menu" role="listbox" id="algolia-autocomplete-listbox-0" style="position: absolute; top: 100%; z-index: 100; display: none; left: 0px; right: auto;">
                    <div class="ds-dataset-1"></div>
                </span>
            </span>
        </form>
</nav>


<div class="container">
    <div class="row">
        <!-- 側邊工具列 -->
        <div class="col-12 col-md-2 my-3">
            <nav class="navbar navbar-expand-lg navbar-light bg-light flex-column">
                <div class="container-fluid ">
                    <!-- ****************************************小視窗用摺疊按鈕(尚無法啟用)**************************************** -->
                    <button class="navbar-toggler" href="#sublist" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNavDropdown" aria-controls="navbarNavDropdown" aria-expanded="true" aria-label="Toggle navigation">
                        <span class="navbar-toggler-icon"></span>
                    </button>
                    <!-- 小視窗時摺疊區域 -->
                    <div class="navbar-collapse collapse">
                        <ul class="navbar-nav flex-column" id="sublist">
                            <!-- 摺疊選單 for 商品類別 -->
                            <li class="nav-item">
                                <a class="nav-link collapsed" href="#categoryOptions" data-bs-toggle="collapse" aria-expanded="false">商品類別</a>
                                <ul id="categoryOptions" class="list-unstyled collapse mx-4">
                                    <li class="my-1 ">
                                        <a href="#" class="selectCategory" val-category="類別ID">類別名稱</a>
                                    </li>
                                </ul>
                            </li>
                            <!-- 摺疊選單 for 寵物類型 -->
                            <li class="nav-item">
                                <a class="nav-link collapsed" href="#tagOptions" data-bs-toggle="collapse" aria-expanded="false">寵物類型(未實裝)</a>
                                <ul id="tagOptions" class="list-unstyled collapse mx-4">
                                    <li class="my-1">
                                        <a href="#" class="selectTag" val-category="0">不限</a>
                                    </li>
                                    <li class="my-1">
                                        <a href="#" class="selectTag" val-category="1">貓咪</a>
                                    </li>
                                    <li class="my-1">
                                        <a href="#" class="selectTag" val-category="2">狗狗</a>
                                    </li>
                                    <li class="my-1">
                                        <a href="#" class="selectTag" val-category="3">鼠寶</a>
                                    </li>
                                    <li class="my-1">
                                        <a href="#" class="selectTag" val-category="4">兔寶</a>
                                    </li>
                                </ul>
                            </li>
                        </ul>
                    </div>
                </div>
            </nav>
        </div>

        <!-- 中間商品欄 -->
        <div class="col-12 col-md-10">
            <div class="container ">
                <div class="row">
                    <div class="col-12 col-md-5 py-3">
                        <div class="item">
                            <!-- ****************************************待設定規格(固定邊長、裁切方式**************************************** -->
                            <img id="mainPicture" src="@Url.Content("~/uploads/merchandisePicture/")default.png" width="100%" class="mainImage pb-3">
                            <div class="image-container">
                                <!-- ****************************************待設定規格(固定邊長、裁切方式**************************************** -->
                                <img src="@Url.Content("~/uploads/merchandisePicture/")default.png" class="mainImage specImage" width="20%" style="border:solid #930000 3px" )>
                                @{
                                    foreach (var item in Model)
                                    {
                                        string img = (item.ImageUrl == null) ? "default.png" : item.ImageUrl;
                                        <img src="@Url.Content("~/uploads/specPicture/")@img" class="specImage" val-specId="@item.SpecId" width="20%">
                                    }
                                }
                            </div>
                        </div>
                    </div>
                    <div class="col-12 col-md-5 pt-3">
                        <nav aria-label="breadcrumb">
                            <ol class="breadcrumb">
                                <li class="breadcrumb-item" id="defaultSearch"><a href="#">商品總覽</a></li>
                                <li class="breadcrumb-item" id="showCategoryName">類別名稱</li>
                            </ol>
                        </nav>
                        <h5 id="showBrandName"></h5>
                        <h2 id="showMerchandiseName">商品名稱</h2><div id="merchandiseIdContainer" val-id="@Model.First().MerchandiseId" style="display:none"></div>
                        <br>
                        <h5>價格：<span id="showPrice"></span></h5>
                        <h5>庫存數量：<span id="showAmount"></span></h5>
                        <h5>產品介紹：</h5>
                        <p id="showDescription"></p>
                        <div>
                            @{
                                foreach (var item in Model)
                                {
                                    <button type="button" data-price="@item.Price" data-amount="@item.Amount" data-imageurl="@item.ImageUrl" data-specId="@item.SpecId" class="btn btn-outline-secondary mx-1 my-1 showSpec">@item.SpecName</button>
                                }
                            }
                        </div>
                        <div>
                            <div class="input-group mx-1 mt-3">
                                <button class="btn btn-outline-secondary" type="button" id="button_minus">  -  </button>
                                <input id="buyAmount" type="number" class="form-control" aria-label="Example text with button addon" min="1" value="1" aria-describedby="button-addon1">
                                <button class="btn btn-outline-secondary" type="button" id="button_plus">  +  </button>
                                <button id="add_to_Cart" type="button" class="btn btn-outline-secondary mx-2">加入購物車</button>
                            </div>

                        </div>
                        <br>
                        <div class="text-end">共計：<span id="totalPrice"></span></div>
                    </div>
                </div>
            </div>
        </div>

    </div>
</div>
<div>
    <!---------------------------------------------------------- 推薦商品(未實裝) ---------------------------------------------------------->
</div>

@section Scripts{
    @*搜尋功能待改(回傳參數)*@
    <script>
        //給予搜尋初值
        let txtKeyword = "";
        let searchCondition = 1;
        let sideCategoryId = 0;

        //搜尋條件
        $(".conditionname").on("change", (e) => {
            searchCondition = $(".conditionname").val();
        });
        //關鍵字
        $("#keywordsearch").on("submit", (e) => {
            txtKeyword = $("#search-input").val();
            e.preventDefault();
            SearchProducts();
        });

        //回到所有商品(重置搜尋條件)
        $("#defaultSearch").on("click", () => {
            window.location.href = `/Mall/Index`;
        });
        //搜尋
        function SearchProducts() {
            window.location.href = `/Mall/Index/?txtKeyword=${txtKeyword}&`
                + `searchCondition=${searchCondition}&sideCategoryId=${sideCategoryId}`;
        };

        //呈現側邊商品類別選項
        $(async () => {
            const CategoryOptions = document.querySelector("#categoryOptions")
            const responseforCategory = await fetch(`@Url.Content("~/ApiMall/GenerateSideCategoryOptions")?txtKeyword=${txtKeyword}&`
                + `searchCondition=${searchCondition}`);
            const returnCategoryBag = await responseforCategory.text();
            const CategoryResult = JSON.parse(returnCategoryBag);

            var categoryList = CategoryResult.map(category => {
                const { categoryId, categoryName } = category;
                return (`<li class="my-1 "><a href="#" class="selectCategory" val-category="${categoryId}">${categoryName}</a></li>`)
            })
            CategoryOptions.innerHTML = categoryList.join("");

            $(".selectCategory").on("click", (e) => {
                sideCategoryId = $(e.currentTarget).attr("val-category");
                SearchProducts();
            })
        })

        //給予購買數初值
        let currentSpecid;
        let purchaseAmount = 1;
        let currentPrice;
        let maxAmount;

        //產生商品資料
        $(async () => {
            const CategoryName = document.querySelector("#showCategoryName");
            const BrandName = document.querySelector("#showBrandName");
            const MerchandiseName = document.querySelector("#showMerchandiseName");
            const Description = document.querySelector("#showDescription");

            const merchandiseId = $("#merchandiseIdContainer").attr("val-id");

            const response = await fetch(`@Url.Content("~/ApiSpec/ShowMerchandise/")${merchandiseId}`);
            const returnJsonBag = await response.text();
            const searchResult = JSON.parse(returnJsonBag)[0];

            CategoryName.innerHTML = searchResult.categoryName;
            BrandName.innerHTML = `《${searchResult.brandName}》`;
            MerchandiseName.innerHTML = searchResult.merchandiseName;
            Description.innerHTML = searchResult.description;
            const imgPath = (searchResult.imageUrl == null) ? "default.png" : searchResult.imageUrl;
            $(".mainImage").attr("src", `@Url.Content("~/uploads/merchandisePicture/")${imgPath}`);

            //載入頁面時自動選擇目標規格按鈕
            $(".showSpec[data-specId=@ViewBag.SpecId]").click();
        })

        //規格按鈕功能
        $(".showSpec").on("click", (e) => {
            //變更按鈕格式
            $(".showSpec").attr("class", "btn btn-outline-secondary mx-1 my-1 showSpec");
            $(e.currentTarget).attr("class", "btn btn-primary mx-1 my-1 showSpec");
            //顯示價格&庫存
            currentPrice = $(e.currentTarget).attr("data-price");
            maxAmount = $(e.currentTarget).attr("data-amount");
            $("#showPrice").text(currentPrice + " 元");
            $("#showAmount").text(maxAmount);
            //設定購買數初值&最大值 + 重置總金額
            $("#buyAmount").attr("max", maxAmount);
            purchaseAmount = 1;
            $("#buyAmount").val(purchaseAmount);
            $("#buyAmount").change();
            //紀錄規格ID
            currentSpecid = $(e.currentTarget).attr("data-specId");
            //變更主圖片
            $(".specImage").attr("style", "");
            $(`[val-specId=${currentSpecid}]`).attr("style", "border:solid #930000 3px");
            const thisImg = $(e.currentTarget).attr("data-imageurl");
            $("#mainPicture").attr("src", `@Url.Content("~/uploads/specPicture/")${thisImg}`)
        });
        //點選圖片變更主圖片
        $(".specImage").on("click", (e) => {
            const thisImgPath = $(e.currentTarget).attr("src");
            console.log(thisImgPath);
            $(".specImage").attr("style", "");
            $(e.currentTarget).attr("style", "border:solid #930000 3px");
            $("#mainPicture").attr("src", thisImgPath)
        });

        //增減選擇數
        $("#button_minus").on("click", () => {
            if (purchaseAmount > 1) {
                purchaseAmount--;
                $("#buyAmount").val(purchaseAmount);
                $("#buyAmount").change();
            }
        })
        $("#button_plus").on("click", () => {
            if (purchaseAmount < maxAmount) {
                purchaseAmount++;
                $("#buyAmount").val(purchaseAmount);
                $("#buyAmount").change();
            }
        })
        //顯示總金額
        $("#buyAmount").on("change", () => {
            $("#totalPrice").text((purchaseAmount * currentPrice) + " 元");
        })

        //叫出登入功能塊
        const loginModal = new bootstrap.Modal(document.querySelector('#loginModal'))

        //加入購物車
        $("#add_to_Cart").on("click", async (e) => {
            if (ROLE != "會員") {
                await Swal.fire('請先登入再使用購物車');
                loginModal.show();
            }
            if (ROLE == "會員") {  //傳送資料
                const specIdforCart = $(e.currentTarget).attr("data-specid");
                const responseCart = await fetch(`@Url.Content("~/ApiMall/AddtoCart/")?SpecId=${specIdforCart}&Quantity=${purchaseAmount}`, {
                    method: "POST"
                });
                const returnJsonBag = await responseCart.text();
                const isSuccess = JSON.parse(returnJsonBag);

                if (isSuccess) {
                    Swal.fire({
                        position: 'center',
                        title: '成功加入購物車！',
                        showConfirmButton: false,
                        timer: 1000,
                        allowOutsideClick: false
                    })
                }
                if (!isSuccess) {
                    Swal.fire({
                        position: 'center',
                        title: '加入購物車失敗，請稍後再試！',
                        showConfirmButton: false,
                        timer: 1500,
                    })
                }
            }
        })
    </script>
}

@section Styles{

}